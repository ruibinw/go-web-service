// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"fmt"
	"git.epam.com/ryan_wang/go-web-service/config"
	"git.epam.com/ryan_wang/go-web-service/internal/controllers"
	"git.epam.com/ryan_wang/go-web-service/internal/repositories"
	"git.epam.com/ryan_wang/go-web-service/internal/services"
	"gorm.io/driver/mysql"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitRecordController() *controllers.RecordController {
	configuration := config.LoadConfig()
	db := NewDBConnection(configuration)
	recordRepository := repositories.NewRecordRepository(db)
	recordService := services.NewRecordService(recordRepository)
	recordController := controllers.NewRecordController(recordService)
	return recordController
}

// wire.go:

func NewDBConnection(cfg *config.Configuration) *gorm.DB {
	dsn := fmt.Sprintf("%s:%s@tcp(%s:%s)/%s?charset=utf8mb4&parseTime=True&loc=Local",
		cfg.Database.UserName,
		cfg.Database.Password,
		cfg.Database.Host,
		cfg.Database.Port,
		cfg.Database.Name,
	)
	db, err := gorm.Open(mysql.Open(dsn))
	if err != nil {
		panic(err)
	}
	return db
}
